{"version":3,"file":"static/js/352.138ef69c.chunk.js","mappings":"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","sources":["components/Layout/DailyCalorieIntake.jsx","components/Forms/DailyCaloriesForm.jsx","pages/HomePage.jsx"],"sourcesContent":["import { Link } from 'react-router-dom';\nimport main from '../App.module.css';\nimport Modal from 'react-modal';\nModal.setAppElement('#root');\n\nexport const DailyCalorieIntake = ({modal, setModal, formData}) => {\n    const modalForm = {\n        content: {\n          top: '50%',\n          left: '50%',\n          right: 'auto',\n          bottom: 'auto',\n          marginRight: '-50%',\n          transform: 'translate(-50%, -50%)',\n          padding: \"0px\",\n          backgroundColor:\"var(--white)\",\n          borderColor: \"var(--gray)\",\n          zIndex: 1000,\n        },\n        overlay: {\n          backgroundColor:\"var(--overlay)\",\n          zIndex: 1000,\n        }\n      }\n    return (\n        <Modal\n        isOpen={modal}\n        onRequestClose={()=>{setModal(false)}}\n        contentLabel=\"Daily Calorie Intake\"\n        style={modalForm}\n        shouldCloseOnOverlayClick={false}\n        shouldCloseOnEsc={true}\n    >\n        <div className={main.modal}>\n            <div className={main.closeWrapper}>\n                <button className={main.close} onClick={()=>{setModal(!modal)}}>\n                    <img src={require(\"../../images/close.png\")} alt=\"close button\" />\n                </button>\n            </div>\n            <p className={main.tag}>Your recommended daily<br />calorie intake is</p>\n                <p className={main.intake}>{formData.intake} <sub style={{fontSize:\"20px\"}}>kcal</sub></p>\n                <hr className={main.hr} />\n            <div className={main.recommend} style={{height:\"220px\",paddingLeft:\"150px\"}}>\n                <p className={main.title}>Foods you should not eat</p>\n                <p className={main.caption}>Flour products</p>\n                <p className={main.caption}>Milk</p>\n                <p className={main.caption}>Read meat</p>\n                <p className={main.caption}>Smoked meats</p>\n            </div>\n            <Link to=\"/register\" className={main.weight}>Start losing weight</Link>\n        </div>\n    </Modal>\n    )\n}","import { useState } from 'react';\nimport { useUser } from '../../hooks/useUser';\nimport main from '../App.module.css';\nimport { DailyCalorieIntake } from '../Layout/DailyCalorieIntake';\nimport Modal from 'react-modal';\nModal.setAppElement('#root');\n\nexport const DailyCaloriesForm = () => {\n    const { isLoggedIn } = useUser();\n    const [formData, setFormData] = useState({});\n    const [modal, setModal] = useState(false);\n    let intake;\n    const handleSubmit = e => {\n        e.preventDefault();\n        const form = e.currentTarget;\n        const height = Number(form.elements.height.value);\n        const age = Number(form.elements.age.value);\n        const weight = Number(form.elements.weight.value);\n        const desired = Number(form.elements.desired.value);\n        const blood = form.elements.blood.value;\n        intake = 10 * weight + 6.25 * height - 5 * age - 161 - 10 * (desired);\n        setFormData({ height, age, weight, desired, blood, intake });\n        setModal(true);\n        form.reset();\n      };\n    return !isLoggedIn &&\n        <>\n            <form className={main.form} onSubmit={handleSubmit} autoComplete=\"off\">\n                {/* <label className={main.label} style={{color:\"var(--orange)\",height:\"4em\"}}>PUBLIC DAILY CALORIES FORM</label> */}\n                <label className={main.tag}>Calculate your daily calorie<br />intake right now</label>\n                <div className={main.row}>\n                    <label className={main.label}>Height *\n                        <input type=\"number\" name=\"height\" autoComplete=\"height\" required />\n                    </label>\n                    <label className={main.label}>Desired weight *\n                        <input type=\"number\" name=\"desired\" autoComplete=\"desired\" required />\n                    </label>\n                </div>\n                <div className={main.row}>\n                    <label className={main.label}>Age *\n                        <input type=\"number\" name=\"age\" autoComplete=\"age\" required />\n                    </label>\n                    <label className={main.label}>Blood type *\n                        <input type=\"text\" name=\"blood\" autoComplete=\"blood\" disabled=\"disabled\" />\n                    </label>\n                </div>\n                <div className={main.row}>\n                    <label className={main.label}>Current weight *\n                        <input type=\"number\" name=\"weight\" autoComplete=\"weight\" required />\n                    </label>\n                    <div className={main.radio}>\n                        <div className={main.radioItem}><input type=\"radio\" name=\"blood\" value=\"1\" defaultChecked={true} /><label className={main.radioLabel}>O</label></div>\n                        <div className={main.radioItem}><input type=\"radio\" name=\"blood\" value=\"2\" /><label className={main.radioLabel}>A</label></div>\n                        <div className={main.radioItem}><input type=\"radio\" name=\"blood\" value=\"3\" /><label className={main.radioLabel}>B</label></div>\n                        <div className={main.radioItem}><input type=\"radio\" name=\"blood\" value=\"4\" /><label className={main.radioLabel}>AB</label></div>\n                    </div>\n                </div>\n                <div className={main.weightWrapper}>\n                    <button type=\"submit\" id={main.weight}>Start losing weight</button>\n                </div>\n            </form>\n            <DailyCalorieIntake modal={modal} setModal={setModal} formData={formData} />\n        </>\n};","import { Helmet, HelmetProvider } from \"react-helmet-async\";\nimport { useUser } from '../hooks/useUser';\nimport { DailyCaloriesForm } from '../components/Forms/DailyCaloriesForm';\nimport main from '../components/App.module.css';\n\nconst HomePage = () => {\n    const { isLoggedIn } = useUser();\n    return(\n        <HelmetProvider>\n            <Helmet>\n                <title>Home</title>\n            </Helmet>\n            {!isLoggedIn &&\n                (<>\n                    <div className={main.left}>\n                        <DailyCaloriesForm />\n                    </div>\n                    <img src={require(\"../images/backgroundwhole.png\")} alt=\"background whole\" className={main.backgroundWhole} />\n                </>)\n            }\n        </HelmetProvider>\n    )\n};\n\nexport default HomePage;"],"names":["Modal","DailyCalorieIntake","_ref","modal","setModal","formData","_jsx","isOpen","onRequestClose","contentLabel","style","content","top","left","right","bottom","marginRight","transform","padding","backgroundColor","borderColor","zIndex","overlay","shouldCloseOnOverlayClick","shouldCloseOnEsc","children","_jsxs","className","main","onClick","src","require","alt","intake","fontSize","height","paddingLeft","Link","to","DailyCaloriesForm","isLoggedIn","useUser","_useState","useState","_useState2","_slicedToArray","setFormData","_useState3","_useState4","_Fragment","onSubmit","e","preventDefault","form","currentTarget","Number","elements","value","age","weight","desired","blood","reset","autoComplete","type","name","required","disabled","defaultChecked","id","HelmetProvider","Helmet"],"sourceRoot":""}