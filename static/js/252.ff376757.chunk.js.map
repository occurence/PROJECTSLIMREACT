{"version":3,"file":"static/js/252.ff376757.chunk.js","mappings":"wMAGaA,EAAe,WACxB,IAAQC,GAAQC,EAAAA,EAAAA,KAARD,IACR,OACIE,EAAAA,EAAAA,MAAAC,EAAAA,SAAA,CAAAC,SAAA,EACIF,EAAAA,EAAAA,MAAA,OAAKG,UAAWC,EAAAA,EAAAA,QAAaF,SAAA,EACzBF,EAAAA,EAAAA,MAAA,KAAGG,UAAWC,EAAAA,EAAAA,MAAWF,SAAA,CAAC,eAAaJ,MACvCO,EAAAA,EAAAA,KAAA,SAAAH,UACIF,EAAAA,EAAAA,MAAA,SAAAE,SAAA,EACIF,EAAAA,EAAAA,MAAA,MAAAE,SAAA,EAAIG,EAAAA,EAAAA,KAAA,MAAAH,SAAI,UAASG,EAAAA,EAAAA,KAAA,MAAAH,SAAI,iBACrBF,EAAAA,EAAAA,MAAA,MAAAE,SAAA,EAAIG,EAAAA,EAAAA,KAAA,MAAAH,SAAI,cAAaG,EAAAA,EAAAA,KAAA,MAAAH,SAAI,iBACzBF,EAAAA,EAAAA,MAAA,MAAAE,SAAA,EAAIG,EAAAA,EAAAA,KAAA,MAAAH,SAAI,gBAAeG,EAAAA,EAAAA,KAAA,MAAAH,SAAI,iBAC3BF,EAAAA,EAAAA,MAAA,MAAAE,SAAA,EAAIG,EAAAA,EAAAA,KAAA,MAAAH,SAAI,kBAAiBG,EAAAA,EAAAA,KAAA,MAAAH,SAAI,yBAIzCF,EAAAA,EAAAA,MAAA,OAAKG,UAAWC,EAAAA,EAAAA,UAAeF,SAAA,EAC3BG,EAAAA,EAAAA,KAAA,KAAGF,UAAWC,EAAAA,EAAAA,MAAWF,SAAC,0BAC1BG,EAAAA,EAAAA,KAAA,KAAGF,UAAWC,EAAAA,EAAAA,QAAaF,SAAC,sCAC5BG,EAAAA,EAAAA,KAAA,KAAGF,UAAWC,EAAAA,EAAAA,QAAaF,SAAC,oBAC5BG,EAAAA,EAAAA,KAAA,KAAGF,UAAWC,EAAAA,EAAAA,QAAaF,SAAC,UAC5BG,EAAAA,EAAAA,KAAA,KAAGF,UAAWC,EAAAA,EAAAA,QAAaF,SAAC,eAC5BG,EAAAA,EAAAA,KAAA,KAAGF,UAAWC,EAAAA,EAAAA,QAAaF,SAAC,sBAI5C,C,+EC5BaI,EAAiB,SAAAC,GAAK,OAAKA,EAAMC,QAAS,EAC1CC,EAAgB,SAAAF,GAAK,OAAIA,EAAMC,SAASE,WAAY,EACpDC,EAAc,SAAAJ,GAAK,OAAIA,EAAMC,SAASI,KAAM,EAC5CC,EAAa,SAAAN,GAAK,OAAIA,EAAMC,SAASM,IAAK,EAC1CC,EAAY,SAAAR,GAAK,OAAIA,EAAMC,SAASV,GAAI,ECAxCkB,EAAe,SAAAT,GAAK,OAAIA,EAAMU,OAAOC,KAAM,EAC3CC,EAAwB,SAAAZ,GAAK,OAAIA,EAAMU,OAAOG,SAAU,EACxDC,EAAsB,SAAAd,GAAK,OAAIA,EAAMU,OAAOK,OAAQ,EAEpDC,GAAuBC,EAAAA,EAAAA,IAChC,CAACR,EAAcP,IACf,SAACQ,EAAQP,GACL,OAAOO,EACNQ,QAAO,SAAAC,GAAO,OAAAA,EAAJC,OAAoBjB,CAAW,IAAEkB,SAAQ,SAAAC,GAAW,OAAAA,EAARC,QAAuB,GAClF,ICTS/B,EAAW,WAWtB,MAAO,CACLgC,iBAXwBC,EAAAA,EAAAA,IAAYb,GAYpCc,eAXqBD,EAAAA,EAAAA,IAAYX,GAYjCJ,QAXee,EAAAA,EAAAA,IAAYhB,GAY3BkB,gBAXuBF,EAAAA,EAAAA,IAAYT,GAYnCf,UAXiBwB,EAAAA,EAAAA,IAAY1B,GAY7BI,aAXoBsB,EAAAA,EAAAA,IAAYvB,GAYhCG,OAXcoB,EAAAA,EAAAA,IAAYrB,GAY1BG,MAXakB,EAAAA,EAAAA,IAAYnB,GAYzBf,KAXYkC,EAAAA,EAAAA,IAAYjB,GAa5B,C,6ICpBaoB,EAAwB,WACjC,IAAMC,GAAWC,EAAAA,EAAAA,MACjBC,GAA6BC,EAAAA,EAAAA,KAArBC,EAAIF,EAAJE,KAAMC,EAAUH,EAAVG,WACN/B,GAAgBX,EAAAA,EAAAA,KAAhBW,YACFgC,EAAMF,EAAKE,IAwBjB,OAAOD,IACHpC,EAAAA,EAAAA,KAAAJ,EAAAA,SAAA,CAAAC,UACIF,EAAAA,EAAAA,MAAA,QAAMG,UAAWC,EAAAA,EAAAA,KAAWuC,SAzBf,SAAAC,GACjBA,EAAEC,iBACF,IAAMC,EAAOF,EAAEG,cACTC,EAASC,OAAOH,EAAKI,SAASF,OAAOG,OACrCC,EAAMH,OAAOH,EAAKI,SAASE,IAAID,OAC/BE,EAASJ,OAAOH,EAAKI,SAASG,OAAOF,OACrCG,EAAUL,OAAOH,EAAKI,SAASI,QAAQH,OACvCI,EAAQN,OAAOH,EAAKI,SAASK,MAAMJ,OACnCK,EAAS,GAAKH,EAAS,KAAOL,EAAS,EAAII,EAAM,IAAM,GAAME,EACnElB,GACIqB,EAAAA,EAAAA,IAAS,CACLjB,KAAK,GAADkB,OAAKhB,GACTf,KAAK,GAAD+B,OAAKhD,GACTsC,OAAO,GAADU,OAAKV,GACXI,IAAI,GAADM,OAAKN,GACRC,OAAO,GAADK,OAAKL,GACXM,cAAc,GAADD,OAAKJ,GAClBC,MAAM,GAADG,OAAKH,GACVK,UAAU,GAADF,OAAKF,MAGtBV,EAAKe,OACP,EAG0DC,aAAa,MAAK5D,SAAA,EAElEF,EAAAA,EAAAA,MAAA,SAAOG,UAAWC,EAAAA,EAAAA,IAASF,SAAA,CAAC,gCAA4BG,EAAAA,EAAAA,KAAA,SAAM,uBAC9DL,EAAAA,EAAAA,MAAA,OAAKG,UAAWC,EAAAA,EAAAA,IAASF,SAAA,EACrBF,EAAAA,EAAAA,MAAA,SAAOG,UAAWC,EAAAA,EAAAA,MAAWF,SAAA,CAAC,YAC1BG,EAAAA,EAAAA,KAAA,SAAO0D,KAAK,SAASC,KAAK,SAASF,aAAa,SAASG,UAAQ,QAErEjE,EAAAA,EAAAA,MAAA,SAAOG,UAAWC,EAAAA,EAAAA,MAAWF,SAAA,CAAC,oBAC1BG,EAAAA,EAAAA,KAAA,SAAO0D,KAAK,SAASC,KAAK,UAAUF,aAAa,UAAUG,UAAQ,WAG3EjE,EAAAA,EAAAA,MAAA,OAAKG,UAAWC,EAAAA,EAAAA,IAASF,SAAA,EACrBF,EAAAA,EAAAA,MAAA,SAAOG,UAAWC,EAAAA,EAAAA,MAAWF,SAAA,CAAC,SAC1BG,EAAAA,EAAAA,KAAA,SAAO0D,KAAK,SAASC,KAAK,MAAMF,aAAa,MAAMG,UAAQ,QAE/DjE,EAAAA,EAAAA,MAAA,SAAOG,UAAWC,EAAAA,EAAAA,MAAWF,SAAA,CAAC,gBAC9BG,EAAAA,EAAAA,KAAA,SAAO0D,KAAK,OAAOC,KAAK,QAAQF,aAAa,QAAQI,SAAS,oBAGlElE,EAAAA,EAAAA,MAAA,OAAKG,UAAWC,EAAAA,EAAAA,IAASF,SAAA,EACrBF,EAAAA,EAAAA,MAAA,SAAOG,UAAWC,EAAAA,EAAAA,MAAWF,SAAA,CAAC,oBAC1BG,EAAAA,EAAAA,KAAA,SAAO0D,KAAK,SAASC,KAAK,SAASF,aAAa,SAASG,UAAQ,QAErEjE,EAAAA,EAAAA,MAAA,OAAKG,UAAWC,EAAAA,EAAAA,MAAWF,SAAA,EACvBF,EAAAA,EAAAA,MAAA,OAAKG,UAAWC,EAAAA,EAAAA,UAAeF,SAAA,EAACG,EAAAA,EAAAA,KAAA,SAAO0D,KAAK,QAAQC,KAAK,QAAQb,MAAM,IAAIgB,gBAAgB,KAAQ9D,EAAAA,EAAAA,KAAA,SAAOF,UAAWC,EAAAA,EAAAA,WAAgBF,SAAC,UACtIF,EAAAA,EAAAA,MAAA,OAAKG,UAAWC,EAAAA,EAAAA,UAAeF,SAAA,EAACG,EAAAA,EAAAA,KAAA,SAAO0D,KAAK,QAAQC,KAAK,QAAQb,MAAM,OAAM9C,EAAAA,EAAAA,KAAA,SAAOF,UAAWC,EAAAA,EAAAA,WAAgBF,SAAC,UAChHF,EAAAA,EAAAA,MAAA,OAAKG,UAAWC,EAAAA,EAAAA,UAAeF,SAAA,EAACG,EAAAA,EAAAA,KAAA,SAAO0D,KAAK,QAAQC,KAAK,QAAQb,MAAM,OAAM9C,EAAAA,EAAAA,KAAA,SAAOF,UAAWC,EAAAA,EAAAA,WAAgBF,SAAC,UAChHF,EAAAA,EAAAA,MAAA,OAAKG,UAAWC,EAAAA,EAAAA,UAAeF,SAAA,EAACG,EAAAA,EAAAA,KAAA,SAAO0D,KAAK,QAAQC,KAAK,QAAQb,MAAM,OAAM9C,EAAAA,EAAAA,KAAA,SAAOF,UAAWC,EAAAA,EAAAA,WAAgBF,SAAC,iBAGxHG,EAAAA,EAAAA,KAAA,OAAKF,UAAWC,EAAAA,EAAAA,cAAmBF,UAC/BG,EAAAA,EAAAA,KAAA,UAAQ0D,KAAK,SAASK,GAAIhE,EAAAA,EAAAA,OAAYF,SAAC,8BAI3D,E,UC3CA,EAtBuB,WACnB,IAAQuC,GAAeF,EAAAA,EAAAA,KAAfE,WACR,OACIzC,EAAAA,EAAAA,MAACqE,EAAAA,GAAc,CAAAnE,SAAA,EACXG,EAAAA,EAAAA,KAACiE,EAAAA,GAAM,CAAApE,UACHG,EAAAA,EAAAA,KAAA,SAAAH,SAAO,iBAEVuC,IACIzC,EAAAA,EAAAA,MAAAC,EAAAA,SAAA,CAAAC,SAAA,EACGG,EAAAA,EAAAA,KAAA,OAAKF,UAAWC,EAAAA,EAAAA,KAAUF,UACtBG,EAAAA,EAAAA,KAAC8B,EAAqB,OAE1B9B,EAAAA,EAAAA,KAAA,OAAKF,UAAWC,EAAAA,EAAAA,MAAWF,UACvBG,EAAAA,EAAAA,KAACR,EAAAA,EAAY,OAEjBQ,EAAAA,EAAAA,KAAA,OAAKkE,IAAKC,EAAQ,MAA6BC,IAAI,oBAAoBtE,UAAWC,EAAAA,EAAAA,sBAKtG,C","sources":["components/Layout/RightSideBar.jsx","redux/calendar/calendarSelectors.js","redux/today/todaysSelectors.js","hooks/useToday.js","components/Forms/CalculatorCalorieForm.jsx","pages/CalculatorPage.jsx"],"sourcesContent":["import main from '../App.module.css';\nimport { useToday } from '../../hooks/useToday';\n\nexport const RightSideBar = () => {\n    const { day } = useToday();\n    return (\n        <>\n            <div className={main.summary}>\n                <p className={main.title}>Summary for {day}</p>\n                <table>\n                    <tbody>\n                        <tr><td>Left</td><td>000 kcal</td></tr>\n                        <tr><td>Consumed</td><td>000 kcal</td></tr>\n                        <tr><td>Daily rate</td><td>000 kcal</td></tr>\n                        <tr><td>n% of normal</td><td>000 kcal</td></tr>\n                    </tbody>\n                </table>\n            </div>\n            <div className={main.recommend}>\n                <p className={main.title}>Food not recommended</p>\n                <p className={main.caption}>Your diet will be displayed here</p>\n                <p className={main.caption}>Flour products</p>\n                <p className={main.caption}>Milk</p>\n                <p className={main.caption}>Read meat</p>\n                <p className={main.caption}>Smoked meats</p>\n            </div>\n        </>\n    )\n}","export const selectCalendar = state =>  state.calendar;\nexport const selectDefault = state => state.calendar.defaultDate;\nexport const selectMonth = state => state.calendar.month;\nexport const selectYear = state => state.calendar.year;\nexport const selectDay = state => state.calendar.day;","import { createSelector } from '@reduxjs/toolkit';\nimport { selectDefault } from '../calendar/calendarSelectors';\n\n\nexport const selectTodays = state => state.todays.items;\nexport const selectIsLoadingTodays = state => state.todays.isLoading;\nexport const selectIsErrorTodays = state => state.todays.isError;\n\nexport const selectFilteredTodays = createSelector(\n    [selectTodays, selectDefault],\n    (todays, defaultDate) => {\n        return todays\n        .filter(({ date }) => date === defaultDate).flatMap(({ products }) => products);\n    }\n);","import { useSelector } from 'react-redux';\nimport { selectTodays, selectIsLoadingTodays, selectIsErrorTodays, selectFilteredTodays } from '../redux/today/todaysSelectors';\nimport { selectCalendar, selectDefault, selectMonth, selectYear, selectDay } from '../redux/calendar/calendarSelectors';\n\nexport const useToday = () => {\n    const isLoadingTodays = useSelector(selectIsLoadingTodays);\n    const isErrorTodays= useSelector(selectIsErrorTodays);\n    const todays = useSelector(selectTodays);\n    const filteredTodays = useSelector(selectFilteredTodays);\n    const calendar = useSelector(selectCalendar);\n    const defaultDate = useSelector(selectDefault);\n    const month = useSelector(selectMonth);\n    const year = useSelector(selectYear);\n    const day = useSelector(selectDay);\n\n  return {\n    isLoadingTodays,\n    isErrorTodays,\n    todays,\n    filteredTodays,\n    calendar,\n    defaultDate,\n    month,\n    year,\n    day,\n  };\n};","import { useDispatch } from 'react-redux';\nimport { useUser } from '../../hooks/useUser';\nimport { useToday } from '../../hooks/useToday';\nimport { addToday } from '../../redux/today/todaysOperations';\nimport main from '../App.module.css';\n\nexport const CalculatorCalorieForm = () => {\n    const dispatch = useDispatch();\n    const { user, isLoggedIn } = useUser();\n    const { defaultDate } = useToday();\n    const _id = user._id;\n    const handleSubmit = e => {\n        e.preventDefault();\n        const form = e.currentTarget;\n        const height = Number(form.elements.height.value);\n        const age = Number(form.elements.age.value);\n        const weight = Number(form.elements.weight.value);\n        const desired = Number(form.elements.desired.value);\n        const blood = Number(form.elements.blood.value);\n        const intake = 10 * weight + 6.25 * height - 5 * age - 161 - 10 * (desired);\n        dispatch(\n            addToday({\n                user: `${_id}`,\n                date: `${defaultDate}`,\n                height: `${height}`,\n                age: `${age}`,\n                weight: `${weight}`,\n                weightDesired: `${desired}`,\n                blood: `${blood}`,\n                dailyRate: `${intake}`,\n            })\n        );\n        form.reset();\n      };\n    return isLoggedIn &&\n        <>\n            <form className={main.form} onSubmit={handleSubmit} autoComplete=\"off\">\n                {/* <label className={main.label} style={{color:\"var(--orange)\",height:\"4em\"}}>PRIVATE CALCULATOR CALORIE FORM</label> */}\n                <label className={main.tag}>Calculate your daily calorie<br />intake right now</label>\n                <div className={main.row}>\n                    <label className={main.label}>Height *\n                        <input type=\"number\" name=\"height\" autoComplete=\"height\" required />\n                    </label>\n                    <label className={main.label}>Desired weight *\n                        <input type=\"number\" name=\"desired\" autoComplete=\"desired\" required />\n                    </label>\n                </div>\n                <div className={main.row}>\n                    <label className={main.label}>Age *\n                        <input type=\"number\" name=\"age\" autoComplete=\"age\" required />\n                    </label>\n                    <label className={main.label}>Blood type *\n                    <input type=\"text\" name=\"blood\" autoComplete=\"blood\" disabled=\"disabled\" />\n                    </label>\n                </div>\n                <div className={main.row}>\n                    <label className={main.label}>Current weight *\n                        <input type=\"number\" name=\"weight\" autoComplete=\"weight\" required />\n                    </label>\n                    <div className={main.radio}>\n                        <div className={main.radioItem}><input type=\"radio\" name=\"blood\" value=\"1\" defaultChecked={true} /><label className={main.radioLabel}>O</label></div>\n                        <div className={main.radioItem}><input type=\"radio\" name=\"blood\" value=\"2\" /><label className={main.radioLabel}>A</label></div>\n                        <div className={main.radioItem}><input type=\"radio\" name=\"blood\" value=\"3\" /><label className={main.radioLabel}>B</label></div>\n                        <div className={main.radioItem}><input type=\"radio\" name=\"blood\" value=\"4\" /><label className={main.radioLabel}>AB</label></div>\n                    </div>\n                </div>\n                <div className={main.weightWrapper}>\n                    <button type=\"submit\" id={main.weight}>Start losing weight</button>\n                </div>\n            </form>\n        </>\n};","import { Helmet, HelmetProvider } from \"react-helmet-async\";\nimport { useUser } from '../hooks/useUser';\nimport { CalculatorCalorieForm } from '../components/Forms/CalculatorCalorieForm';\nimport { RightSideBar } from '../components/Layout/RightSideBar';\nimport main from '../components/App.module.css';\n\nconst CalculatorPage = () => {\n    const { isLoggedIn } = useUser();\n    return(\n        <HelmetProvider>\n            <Helmet>\n                <title>Calculator</title>\n            </Helmet>\n            {isLoggedIn &&\n                (<>\n                    <div className={main.left}>\n                        <CalculatorCalorieForm />\n                    </div>\n                    <div className={main.right}>\n                        <RightSideBar />\n                    </div>\n                    <img src={require(\"../images/leaveshalf.png\")} alt=\"background leaves\" className={main.backgroundHalf} />\n                </>)\n            }\n        </HelmetProvider>\n    )\n};\n\nexport default CalculatorPage;"],"names":["RightSideBar","day","useToday","_jsxs","_Fragment","children","className","main","_jsx","selectCalendar","state","calendar","selectDefault","defaultDate","selectMonth","month","selectYear","year","selectDay","selectTodays","todays","items","selectIsLoadingTodays","isLoading","selectIsErrorTodays","isError","selectFilteredTodays","createSelector","filter","_ref","date","flatMap","_ref2","products","isLoadingTodays","useSelector","isErrorTodays","filteredTodays","CalculatorCalorieForm","dispatch","useDispatch","_useUser","useUser","user","isLoggedIn","_id","onSubmit","e","preventDefault","form","currentTarget","height","Number","elements","value","age","weight","desired","blood","intake","addToday","concat","weightDesired","dailyRate","reset","autoComplete","type","name","required","disabled","defaultChecked","id","HelmetProvider","Helmet","src","require","alt"],"sourceRoot":""}